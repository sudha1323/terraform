trigger:
- main  # Or your branch of choice

pool:
  name: 'default'

variables:
  terraform_version: '1.4.6'  # Specify the Terraform version you need
  cx_client_id: $(TEST_ST)  # Checkmarx Client ID (stored as secret in Azure DevOps)
  cx_client_secret: $(DSotaZNxQYKSDSeDSjvGjNh0DFncxRACT)  # Checkmarx Client Secret (stored as secret in Azure DevOps)
  cx_tenant: $(ast_abdul_ansari)  # Your Checkmarx Tenant Name (stored as secret in Azure DevOps)
  project_name: 'MyTerraformProject'  # Your project name for Checkmarx
  scan_type: 'IaC'  # IaC Scan Type (can be 'SAST' or others depending on the type of scan you need)
  scan_directory: '.'  # Directory to scan (typically current directory)

jobs:
- job: CxOneIaCScan
  displayName: 'CxOne IaC Scan Job'
  steps:

    - task: Checkout@1
      displayName: 'Checkout Code'
      inputs:
        repository: self
        clean: true

    

    

    - script: |
        # Authenticate with Checkmarx CLI using environment variables
        export CX_CLIENT_ID=${{ variables.cx_client_id }}
        export CX_CLIENT_SECRET=${{ variables.cx_client_secret }}
        export CX_TENANT=${{ variables.cx_tenant }}

        # Run the CxOne IaC scan using Checkmarx CLI
        cx scan create --project-name "${{ variables.project_name }}" --scan-type "${{ variables.scan_type }}" --directory "${{ variables.scan_directory }}" --branch main
      displayName: 'Run CxOne IaC Scan'

    - task: PublishBuildArtifacts@1
      displayName: 'Publish CxOne Scan Results'
      inputs:
        PathtoPublish: $(Build.SourcesDirectory)
        ArtifactName: 'cxone-scan-results'
        publishLocation: 'Container'

    - script: |
        echo "CxOne IaC scan completed successfully!"
      displayName: 'Finish CxOne Scan'
